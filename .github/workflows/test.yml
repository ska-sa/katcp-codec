name: Unit tests
on: [push, pull_request]
concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip'
      - uses: dtolnay/rust-toolchain@1.76.0
        with:
          components: rustfmt, clippy
      - name: Install pre-commit
        run: pip install -c requirements.txt pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files
  rust-tests:
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: dtolnay/rust-toolchain@1.76.0
      - name: Run Rust tests
        run: cargo test
  python-tests:
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: dtolnay/rust-toolchain@1.76.0
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install package
        run: pip install .
      - name: Run Python tests
        run: pytest -v -ra
  linux-wheels:
    needs: [pre-commit, python-tests, rust-tests]
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        python: [cp38]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
        if: matrix.arch != 'x86_64'
      - id: rust-toolchain
        uses: dtolnay/rust-toolchain@1.76.0
      - uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.python }}-manylinux*
          RUST_VERSION: ${{ steps.rust-toolchain.outputs.name }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheel_linux-${{ matrix.arch }}-${{ matrix.python }}
          path: ./wheelhouse/*.whl
